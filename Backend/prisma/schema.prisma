generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}

model FacultyApplication {
  id                  String      @id @default(cuid())
  fullName            String
  gender              String
  dateOfBirth         DateTime
  age                 String
  email               String      @unique
  phone               String
  position            String
  applicationType     String
  branch              String

  profilePictureKey   String     
  resumeKey           String     

  // Education
  tenthSchoolName     String
  tenthPlace          String
  tenthTimeline       String
  tenthPercentage     String
  interCollegeName    String
  interPlace          String
  interTimeline       String
  interPercentage     String
  ugCourse String
  ugBranch String
  ugCollegeName String
  ugPlace String
  ugTimeline String
  ugCgpa String

  // Postgraduate Information
  mtechCollege            String?
  mtechYearOfJoining      String?
  mtechYearOfGraduation   String?
  mtechDesignation        String?
  mtechCgpa               String?
  otherpgcollege          String?
  otherPGDegree           String?
  otherPGYearOfJoining    String?
  otherPGYearOfPassing    String?
  otherPGDesignation      String?
  otherPGCgpa             String?

  // Experience
  hasExperience       Boolean
  experiences         Experience[]

  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
  status            String     @default("Pending")
}

model Experience {
  id            String             @id @default(cuid())
  experiencetype  String
  designation   String
  institution   String
  place         String
  fromDate      String
  toDate        String

  facultyId     String
  faculty       FacultyApplication @relation(fields: [facultyId], references: [id])
}